{"version":3,"sources":["images/foxlogo.jpg","images/banner.jpg","Header.js","Trending.js","NowPlayingComponent.js","ActorSearch.js","TopRated.js","Upcoming.js","MovieSearch.js","MemeGenerator.js","Navbar.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","banner","alt","foxlogo","Trending","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cards","_this2","fetch","then","response","json","data","setState","results","map","card","poster_path","title","overview","React","Component","NowPlayingComponent","ActorSearch","info","resultsToRender","handleChange","bind","assertThisInitialized","handleSubmit","event","value","target","searchUrl","encodeURI","console","log","preventDefault","test","key","id","name","gender","profile_path","onSubmit","type","firstName","placeholder","onChange","TopRated","Upcoming","MovieSearch","release_date","popularity","vote_average","MemeGenerator","topText","bottomText","randomImg","allMemeImgs","memes","_event$target","defineProperty","randNum","Math","floor","random","length","randMemeImg","url","Navbar","props","button_one","button_two","button_three","button_four","button_five","button_six","handleClick","onClick","src_Trending","src_NowPlayingComponent","src_ActorSearch","src_MovieSearch","src_TopRated","src_Upcoming","src_MemeGenerator","Footer","App","src_Header","src_Navbar","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+NCazBC,MATf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAQF,UAAU,YAAYG,IAAI,WAC5CN,EAAAC,EAAAC,cAAA,OAAKE,IAAKG,IAASJ,UAAU,YAAYG,IAAI,sBCwCpCE,cA5Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACXC,MAAO,IAJGR,mFAQM,IAAAS,EAAAN,KAClBO,MACE,0FAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAAEP,MAAOM,EAAKE,6CAI5C,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,mBACCS,KAAKI,MAAMC,MAAMS,IAAI,SAAAC,GAAI,OACxB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,eACJF,IACE,kDACAuB,EAAKC,cAGT5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAewB,EAAKE,OACpC7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAAuByB,EAAKG,uBAnCrBC,IAAMC,WC8CdC,cA9Cb,SAAAA,IAAc,IAAAxB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACZxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,QAEKI,MAAQ,CACXC,MAAO,IAJGR,mFAQM,IAAAS,EAAAN,KAClBO,MACE,2FAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAAEP,MAAOM,EAAKE,6CAI5C,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,2BACCS,KAAKI,MAAMC,MAAMS,IAAI,SAAAC,GAAI,OACxB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,eACJF,IACE,kDACAuB,EAAKC,cAIT5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAewB,EAAKE,OACnC7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAAuByB,EAAKG,uBApCVC,IAAMC,WC+EzBE,cA7Eb,SAAAA,IAAc,IAAAzB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACZzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,QAEKI,MAAQ,CACXC,MAAO,CAACkB,KAAK,IACbC,gBAAiB,IAInB3B,EAAK4B,aAAe5B,EAAK4B,aAAaC,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IACpBA,EAAK+B,aAAe/B,EAAK+B,aAAaF,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IAVRA,4EAaDgC,GAAO,IACVC,EAAUD,EAAME,OAAhBD,MAGJE,EACF,6FAHgBC,UAAUH,GAK5BI,QAAQC,IAAIH,GACZhC,KAAKY,SAAS,CAAEP,MAAO2B,yCAGZH,GAAO,IAAAvB,EAAAN,KAClB6B,EAAMO,iBACNF,QAAQC,IAAInC,KAAKI,MAAMC,OACvBE,MAAMP,KAAKI,MAAMC,OACdG,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJ,IAAI0B,EAAO1B,EAAKE,QAAQC,IAAI,SAAAS,GAC1B,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+C,IAAKhC,EAAKF,MAAMC,MAAMkC,IAC1CnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAegC,EAAKiB,MACnCpD,EAAAC,EAAAC,cAAA,sBAAciC,EAAKkB,QAEnBrD,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,mBACJF,IACE,kDACA+B,EAAKmB,oBAQnBpC,EAAKM,SAAS,CAAEY,gBAAiBa,uCAKrC,OACEjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMqD,SAAU3C,KAAK4B,aAAcrC,UAAU,aAC3CH,EAAAC,EAAAC,cAAA,SACEsD,KAAK,OACLd,MAAO9B,KAAKI,MAAMyC,UAClBL,KAAK,YACLM,YAAY,cACZC,SAAU/C,KAAKyB,eAEjBrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,WAEDS,KAAKI,MAAMoB,wBAxEML,IAAMC,WC6CjB4B,cA5Cb,SAAAA,IAAc,IAAAnD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACZnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,QAEKI,MAAQ,CACXC,MAAO,IAJGR,mFAQM,IAAAS,EAAAN,KAClBO,MACE,+GAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAAEP,MAAOM,EAAKE,6CAI5C,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,aACCS,KAAKI,MAAMC,MAAMS,IAAI,SAAAC,GAAI,OACxB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,eACJF,IACE,kDACAuB,EAAKC,cAGT5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAewB,EAAKE,OACpC7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAAuByB,EAAKG,uBAnCrBC,IAAMC,WC6Cd6B,cA5Cb,SAAAA,IAAc,IAAApD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACZpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,QAEKI,MAAQ,CACXC,MAAO,IAJGR,mFAQM,IAAAS,EAAAN,KAClBO,MACE,8GAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAAEP,MAAOM,EAAKE,6CAI5C,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,mBACCS,KAAKI,MAAMC,MAAMS,IAAI,SAAAC,GAAI,OACxB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,eACJF,IACE,kDACAuB,EAAKC,cAGT5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAewB,EAAKE,OACpC7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BAAuByB,EAAKG,uBAnCrBC,IAAMC,WC+Ed8B,cA9Eb,SAAAA,IAAc,IAAArD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACZrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,QAEKI,MAAQ,CACXC,MAAO,GACPmB,gBAAiB,IAGnB3B,EAAK4B,aAAe5B,EAAK4B,aAAaC,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IACpBA,EAAK+B,aAAe/B,EAAK+B,aAAaF,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IATRA,4EAYDgC,GAAO,IACVC,EAAUD,EAAME,OAAhBD,MAGJE,EACF,sIAHgBC,UAAUH,GAM5B9B,KAAKY,SAAS,CAAEP,MAAO2B,yCAGZH,GAAO,IAAAvB,EAAAN,KAClB6B,EAAMO,iBAEN7B,MAAMP,KAAKI,MAAMC,OACdG,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJ,IAAI0B,EAAO1B,EAAKE,QAAQC,IAAI,SAAAS,GAC1B,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+C,IAAKhC,EAAKF,MAAMC,MAAMkC,IAC1CnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAegC,EAAKN,OACnC7B,EAAAC,EAAAC,cAAA,4BAAoBiC,EAAK4B,cACzB/D,EAAAC,EAAAC,cAAA,0BAAkBiC,EAAK6B,YACvBhE,EAAAC,EAAAC,cAAA,8BAAsBiC,EAAK8B,cAC3BjE,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVG,IAAI,mBACJF,IACE,kDACA+B,EAAKP,cAGT5B,EAAAC,EAAAC,cAAA,8BAAsBiC,EAAKL,eAMrCgB,QAAQC,IAAIE,GACZ/B,EAAKM,SAAS,CAAEY,gBAAiBa,uCAKrC,OACEjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMqD,SAAU3C,KAAK4B,aAAcrC,UAAU,aAC3CH,EAAAC,EAAAC,cAAA,SACEsD,KAAK,OACLd,MAAO9B,KAAKI,MAAMyC,UAClBL,KAAK,YACLM,YAAY,cACZC,SAAU/C,KAAKyB,eAEjBrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,WAEDS,KAAKI,MAAMoB,wBAzEML,IAAMC,mBCkEjBkC,cAlEb,SAAAA,IAAc,IAAAzD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACZzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,QACKI,MAAQ,CACXmD,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEf7D,EAAK4B,aAAe5B,EAAK4B,aAAaC,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IACpBA,EAAK+B,aAAe/B,EAAK+B,aAAaF,KAAlB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IATRA,mFAYM,IAAAS,EAAAN,KAClBO,MAAM,qCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,IACRkD,EAAUlD,EAASE,KAAnBgD,MACRrD,EAAKM,SAAS,CAAE8C,YAAaC,2CAItB9B,GAAO,IAAA+B,EACM/B,EAAME,OAAtBS,EADUoB,EACVpB,KAAMV,EADI8B,EACJ9B,MACd9B,KAAKY,SAALd,OAAA+D,EAAA,EAAA/D,CAAA,GAAiB0C,EAAOV,yCAGbD,GACXA,EAAMO,iBACN,IAAM0B,EAAUC,KAAKC,MAAMD,KAAKE,SAAWjE,KAAKI,MAAMsD,YAAYQ,QAC5DC,EAAcnE,KAAKI,MAAMsD,YAAYI,GAASM,IACpDpE,KAAKY,SAAS,CAAE6C,UAAWU,qCAI3B,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,SAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKQ,KAAKI,MAAMqD,UAAW/D,IAAI,KACpCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOS,KAAKI,MAAMmD,SAChCnE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUS,KAAKI,MAAMoD,aAErCpE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYoD,SAAU3C,KAAK4B,cACzCxC,EAAAC,EAAAC,cAAA,SACEsD,KAAK,OACLJ,KAAK,UACLM,YAAY,WACZhB,MAAO9B,KAAKI,MAAMmD,QAClBR,SAAU/C,KAAKyB,eAEjBrC,EAAAC,EAAAC,cAAA,SACEsD,KAAK,OACLJ,KAAK,aACLM,YAAY,cACZhB,MAAO9B,KAAKI,MAAMoD,WAClBT,SAAU/C,KAAKyB,eAGjBrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,qBA5DkB6B,aCqMbiD,cA5Lb,SAAAA,EAAYC,GAAO,IAAAzE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACjBxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,KAAMsE,KACDlE,MAAQ,CACXmE,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,aAAa,EACbC,aAAa,EACbC,YAAY,GAEd/E,EAAKgF,YAAchF,EAAKgF,YAAYnD,KAAjB5B,OAAA6B,EAAA,EAAA7B,CAAAD,IAVFA,2EAaPyE,GAEc,eAApBA,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,KAEN,eAApBN,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,KAEN,iBAApBN,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,KAEN,gBAApBN,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,KAEN,gBAApBN,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,KAGN,eAApBN,EAAMvC,OAAOQ,KACfvC,KAAKY,SAAS,CAAE2D,YAAY,IAC5BvE,KAAKY,SAAS,CAAE4D,YAAY,IAC5BxE,KAAKY,SAAS,CAAE6D,cAAc,IAC9BzE,KAAKY,SAAS,CAAE8D,aAAa,IAC7B1E,KAAKY,SAAS,CAAE+D,aAAa,IAC7B3E,KAAKY,SAAS,CAAEgE,YAAY,sCAI9B,OACExF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,qBACNnD,EAAAC,EAAAC,cAAA,UACEiD,GAAG,aACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,mBAOAH,EAAAC,EAAAC,cAAA,UACEiD,GAAG,aACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,uBAOAH,EAAAC,EAAAC,cAAA,UACEiD,GAAG,cACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,cAOAH,EAAAC,EAAAC,cAAA,UACEiD,GAAG,cACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,YAOAH,EAAAC,EAAAC,cAAA,UACEiD,GAAG,eACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,UAQAH,EAAAC,EAAAC,cAAA,UACEiD,GAAG,aACHuC,QAAS9E,KAAK6E,YACdtF,UAAU,UAHZ,SAQAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZS,KAAKI,MAAMmE,WACVnF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,WACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACyF,EAAD,QAIJ3F,EAAAC,EAAAC,cAAA,YAEDU,KAAKI,MAAMoE,WACVpF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,WACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC0F,EAAD,QAIJ5F,EAAAC,EAAAC,cAAA,YAEDU,KAAKI,MAAMqE,aACVrF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,aACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAC4F,EAAD,OAGF9F,EAAAC,EAAAC,cAAA,YAGDU,KAAKI,MAAMsE,YACVtF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,YACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAC6F,EAAD,OAGF/F,EAAAC,EAAAC,cAAA,YAGDU,KAAKI,MAAMuE,YACVvF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,YACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAC8F,EAAD,OAGFhG,EAAAC,EAAAC,cAAA,aAGHU,KAAKI,MAAMwE,WACVxF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,YACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAC+F,EAAD,OAGFjG,EAAAC,EAAAC,cAAA,YAEAU,KAAKI,MAAMoE,WACTpF,EAAAC,EAAAC,cAAA,OAAKiD,GAAG,WACNnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC0F,EAAD,QAIJ5F,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAtLL4B,IAAMC,WCJZkE,MAJf,WACE,OAAOlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,0CCmBMgG,mLAdX,OACEnG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAD,MACArG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iBAAyCH,EAAAC,EAAAC,cAAA,WAAzC,gDAA4FF,EAAAC,EAAAC,cAAA,WAA5F,iBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEjBH,EAAAC,EAAAC,cAACoG,EAAD,cAVUvE,IAAMC,WCMJuE,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZRC,IAASC,OAAO7G,EAAAC,EAAAC,cAAC4G,EAAD,MAASC,SAASC,eAAe,SD2HzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/F,KAAK,SAAAgG,GACjCA,EAAaC","file":"static/js/main.a21e34a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/foxlogo.9ee7af28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner.acf230ef.jpg\";","import React from \"react\";\r\nimport foxlogo from \"./images/foxlogo.jpg\";\r\nimport banner from \"./images/banner.jpg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img src={banner} className=\"bannerimg\" alt=\"banner\" />\r\n      <img src={foxlogo} className=\"navbarimg\" alt=\"Fox Logo\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass Trending extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/trending/all/day?api_key=b43cb99c571cc1b9a73eda8c7823929a\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ cards: data.results }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <span className=\"MainHeader\">Trending Movies</span>\r\n        {this.state.cards.map(card => (\r\n          <div className=\"grid__item\">\r\n            <div className=\"card\">\r\n              <img\r\n                className=\"images\"\r\n                alt=\"Movie poster\"\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                  card.poster_path\r\n                }\r\n              />\r\n              <p className=\"card_overview\">\r\n                <span className=\"card__title\">{card.title}</span>\r\n                <br />\r\n                <span>Movie Overview: {card.overview}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Trending;\r\n","import React from \"react\";\r\n\r\nclass NowPlayingComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/now_playing?api_key=b43cb99c571cc1b9a73eda8c7823929a\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ cards: data.results }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <span className=\"MainHeader\">Now Playing In Theaters</span>\r\n        {this.state.cards.map(card => (\r\n          <div className=\"grid__item\">\r\n            <div className=\"card\">\r\n              <img\r\n                className=\"images\"\r\n                alt=\"Movie poster\"\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                  card.poster_path\r\n                }\r\n              />\r\n\r\n              <p className=\"card_overview\">\r\n                <div className=\"card__title\">{card.title}</div>\r\n                <br />\r\n                <span>Movie Overview: {card.overview}</span>\r\n\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NowPlayingComponent;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass ActorSearch extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: {info:{}},\r\n      resultsToRender: []\r\n     \r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { value } = event.target;\r\n    let finalString = encodeURI(value);\r\n\r\n    let searchUrl =\r\n      \"https://api.themoviedb.org/3/search/person?api_key=b43cb99c571cc1b9a73eda8c7823929a&query=\" +\r\n      finalString;\r\n    console.log(searchUrl);\r\n    this.setState({ cards: searchUrl });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.cards);\r\n    fetch(this.state.cards)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        let test = data.results.map(info => {\r\n          return (\r\n            <div>\r\n              <div className=\"grid\" key={this.state.cards.id}>\r\n                <div className=\"card\">\r\n                  <div className=\"card__title\">{info.name}</div>\r\n                  <div>Gender: {info.gender}</div>\r\n                  {/* <ActorInfo id={info.id}/> */}\r\n                  <img\r\n                    className=\"images\"\r\n                    alt=\"Nothing to view!\"\r\n                    src={\r\n                      \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                      info.profile_path\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        this.setState({ resultsToRender: test });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"MainHeader\">Search</span>\r\n        <form onSubmit={this.handleSubmit} className=\"meme-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.firstName}\r\n            name=\"actorName\"\r\n            placeholder=\"Actors Name\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"button\">Submit</button>\r\n        </form>\r\n        {this.state.resultsToRender}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActorSearch;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass TopRated extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/top_rated?page=1&language=en-US&api_key=b43cb99c571cc1b9a73eda8c7823929a\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ cards: data.results }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <span className=\"MainHeader\">Top Rated</span>\r\n        {this.state.cards.map(card => (\r\n          <div className=\"grid__item\">\r\n            <div className=\"card\">\r\n              <img\r\n                className=\"images\"\r\n                alt=\"Movie poster\"\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                  card.poster_path\r\n                }\r\n              />\r\n              <p className=\"card_overview\">\r\n                <span className=\"card__title\">{card.title}</span>\r\n                <br />\r\n                <span>Movie Overview: {card.overview}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopRated;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass Upcoming extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/upcoming?page=1&language=en-US&api_key=b43cb99c571cc1b9a73eda8c7823929a\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ cards: data.results }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        <span className=\"MainHeader\">Upcoming Movies</span>\r\n        {this.state.cards.map(card => (\r\n          <div className=\"grid__item\">\r\n            <div className=\"card\">\r\n              <img\r\n                className=\"images\"\r\n                alt=\"Movie poster\"\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                  card.poster_path\r\n                }\r\n              />\r\n              <p className=\"card_overview\">\r\n                <span className=\"card__title\">{card.title}</span>\r\n                <br />\r\n                <span>Movie Overview: {card.overview}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upcoming;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass MovieSearch extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cards: [],\r\n      resultsToRender: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { value } = event.target;\r\n    let finalString = encodeURI(value);\r\n\r\n    let searchUrl =\r\n      \"https://api.themoviedb.org/3/search/movie?include_adult=false&page=1&language=en-US&api_key=b43cb99c571cc1b9a73eda8c7823929a&query=\" +\r\n      finalString;\r\n\r\n    this.setState({ cards: searchUrl });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(this.state.cards)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        let test = data.results.map(info => {\r\n          return (\r\n            <div>\r\n              <div className=\"grid\" key={this.state.cards.id}>\r\n                <div className=\"card\">\r\n                  <div className=\"card__title\">{info.title}</div>\r\n                  <div>Release Date: {info.release_date}</div>\r\n                  <div>Popularity: {info.popularity}</div>\r\n                  <div>Voters Average: {info.vote_average}</div>\r\n                  <img\r\n                    className=\"images\"\r\n                    alt=\"Nothing to view!\"\r\n                    src={\r\n                      \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" +\r\n                      info.poster_path\r\n                    }\r\n                  />\r\n                  <div>Movie Overview: {info.overview}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        console.log(test);\r\n        this.setState({ resultsToRender: test });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"meme-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.firstName}\r\n            name=\"movieName\"\r\n            placeholder=\"Movies Name\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"button\">Submit</button>\r\n        </form>\r\n        {this.state.resultsToRender}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieSearch;","import React, { Component } from \"react\";\r\n\r\nclass MemeGenerator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n      allMemeImgs: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const { memes } = response.data;\r\n        this.setState({ allMemeImgs: memes });\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\r\n    const randMemeImg = this.state.allMemeImgs[randNum].url;\r\n    this.setState({ randomImg: randMemeImg });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"MainHeader\">Memes</span>\r\n\r\n        <div className=\"meme\">\r\n          <img src={this.state.randomImg} alt=\"\" />\r\n          <h2 className=\"top\">{this.state.topText}</h2>\r\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n        </div>\r\n        <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"topText\"\r\n            placeholder=\"Top Text\"\r\n            value={this.state.topText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"bottomText\"\r\n            placeholder=\"Bottom Text\"\r\n            value={this.state.bottomText}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <button className=\"button\">Generate</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Trending from \"./Trending\";\r\nimport NowPlayingComponent from \"./NowPlayingComponent\";\r\nimport ActorSearch from \"./ActorSearch\";\r\nimport TopRated from \"./TopRated\";\r\nimport Upcoming from \"./Upcoming\";\r\nimport MovieSearch from \"./MovieSearch\";\r\nimport MemeGenerator from \"./MemeGenerator\";\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      button_one: false,\r\n      button_two: false,\r\n      button_three: false,\r\n      button_four: false,\r\n      button_five: false,\r\n      button_six: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(props) {\r\n    //     Setting state and a callback function\r\n    if (props.target.id === \"button_one\") {\r\n      this.setState({ button_one: true });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: false });\r\n      this.setState({ button_four: false });\r\n      this.setState({ button_five: false });\r\n      this.setState({ button_six: false });\r\n    }\r\n    if (props.target.id === \"button_two\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: true });\r\n      this.setState({ button_three: false });\r\n      this.setState({ button_four: false });\r\n      this.setState({ button_five: false });\r\n      this.setState({ button_six: false });\r\n    }\r\n    if (props.target.id === \"button_three\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: true });\r\n      this.setState({ button_four: false });\r\n      this.setState({ button_five: false });\r\n      this.setState({ button_six: false });\r\n    }\r\n    if (props.target.id === \"button_four\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: false });\r\n      this.setState({ button_four: true });\r\n      this.setState({ button_five: false });\r\n      this.setState({ button_six: false });\r\n    }\r\n    if (props.target.id === \"button_five\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: false });\r\n      this.setState({ button_four: false });\r\n      this.setState({ button_five: true });\r\n      this.setState({ button_six: false });\r\n    }\r\n\r\n    if (props.target.id === \"button_six\") {\r\n      this.setState({ button_one: false });\r\n      this.setState({ button_two: false });\r\n      this.setState({ button_three: false });\r\n      this.setState({ button_four: false });\r\n      this.setState({ button_five: false });\r\n      this.setState({ button_six: true });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar\">\r\n          <div id=\"react-application\">\r\n            <button\r\n              id=\"button_one\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n               Trending Movies \r\n            </button>\r\n            <button\r\n              id=\"button_two\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Playing In Theaters \r\n            </button>\r\n            <button\r\n              id=\"button_four\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Top Movies\r\n            </button>\r\n            <button\r\n              id=\"button_five\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Upcoming\r\n            </button>\r\n            <button\r\n              id=\"button_three\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Search\r\n            </button>\r\n\r\n            <button\r\n              id=\"button_six\"\r\n              onClick={this.handleClick}\r\n              className=\"button\"\r\n            >\r\n              Memes\r\n            </button>\r\n\r\n            <div className=\"spacer\" />\r\n          </div>\r\n          <div className=\"conditional-render-section\">\r\n            {this.state.button_one ? (\r\n              <div id=\"div-one\">\r\n                <div className=\"img-wrapper\">\r\n                  <Trending />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n            {this.state.button_two ? (\r\n              <div id=\"div-two\">\r\n                <div className=\"img-wrapper\">\r\n                  <NowPlayingComponent />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n            {this.state.button_three ? (\r\n              <div id=\"div-three\">\r\n                <div className=\"img-wrapper\" />\r\n                <ActorSearch />\r\n                <MovieSearch />\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n\r\n            {this.state.button_four ? (\r\n              <div id=\"div-four\">\r\n                <div className=\"img-wrapper\" />\r\n                <TopRated />\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n\r\n            {this.state.button_five ? (\r\n              <div id=\"div-five\">\r\n                <div className=\"img-wrapper\" />\r\n                <Upcoming />\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n          {this.state.button_six ? (\r\n            <div id=\"div-five\">\r\n              <div className=\"img-wrapper\" />\r\n              <MemeGenerator />\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n           {this.state.button_two ? (\r\n              <div id=\"div-two\">\r\n                <div className=\"img-wrapper\">\r\n                  <NowPlayingComponent />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n\r\n          <main className=\"body\" />\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <div className=\"footer\">From The Brain Of Justin Wozniak 2019</div>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"./index.css\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Navbar />\r\n        <div>\r\n          <h1 className=\"MainHeader\">Mr Fox' movies<br /> Your place for endless movie information!!!!<br />Apdated daily</h1>\r\n          <div className=\"spacer\"></div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}